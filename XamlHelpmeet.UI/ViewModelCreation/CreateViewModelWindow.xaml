<Window x:Class="XamlHelpmeet.UI.ViewModelCreation.CreateViewModelWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:clstb="clr-namespace:XamlHelpmeet.UI.CheckListBox"
        xmlns:local="clr-namespace:XamlHelpmeet.UI.ViewModelCreation"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        Title="Create ViewModel"
        Width="760"
        Height="727"
        Loaded="CreateViewModelWindow_Unloaded"
        WindowStartupLocation="CenterScreen">
    <StackPanel>
        <StackPanel.Resources>

            <CollectionViewSource x:Key="cvsProperties" Source="{Binding Path=ClassEntity.PropertyInfomation}">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="Name" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>

            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />

            <Style x:Key="alternatingWithTriggers" TargetType="{x:Type ListBoxItem}">
                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="WhiteSmoke" />
                    </Trigger>
                </Style.Triggers>
            </Style>

        </StackPanel.Resources>

        <TabControl x:Name="tcPropertyGeneration">
            <TabItem Header="Step 1 (required)">
                <StackPanel>
                    <TextBlock Margin="7" Text="Configure how the Model will be exposed on the ViewModel" />
                    <StackPanel Margin="7" Orientation="Horizontal">
                        <TextBlock FontSize="14" Text="Data Class" />
                        <TextBlock Margin="7,0,0,0"
                                   FontSize="14"
                                   FontWeight="Bold"
                                   Text="{Binding Path=TypeName}" />
                    </StackPanel>

                    <StackPanel Margin="3.5" Orientation="Horizontal">
                        <TextBlock Foreground="Blue" Text="{Binding Path=PropertySignature}" />
                        <TextBox Width="200"
                                 Margin="7,0"
                                 Text="{Binding Path=PropertyName,
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Foreground="Blue" Text="As" />
                        <Grid Margin="7,0">
                            <ComboBox x:Name="cboPropertyType"
                                      Width="317"
                                      MaxWidth="317"
                                      Focusable="False"
                                      Loaded="cboPropertyType_Loaded" />
                            <TextBox Width="300"
                                     Margin="0,0,17,0"
                                     Foreground="Blue"
                                     Text="{Binding Path=PropertyType,
                                                    Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                    </StackPanel>

                    <TextBlock Margin="10.5,3.5"
                               Foreground="Blue"
                               Text="Get" />

                    <StackPanel Margin="17.5,3.5" Orientation="Horizontal">
                        <TextBlock Foreground="Blue" Text="Return" />
                        <TextBox Width="200"
                                 Margin="7,0"
                                 Text="{Binding Path=FieldName,
                                                UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>

                    <TextBlock Margin="10.5,3.5"
                               Foreground="Blue"
                               Text="End Get" />

                    <StackPanel Margin="10.5,3.5" Orientation="Horizontal">
                        <TextBlock Margin="0,0,7,0"
                                   Foreground="Blue"
                                   Text="Private"
                                   Visibility="{Binding Path=HasPrivateSetter,
                                                        Converter={StaticResource booleanToVisibilityConverter}}" />
                        <TextBlock Foreground="Blue" Text="Set(ByVal " />
                        <TextBlock Text="Value " />
                        <TextBlock Foreground="Blue" Text="As" />
                        <TextBlock Margin="7,0,0,0"
                                   Foreground="Blue"
                                   Text="{Binding Path=PropertyType}" />
                        <TextBlock Text=")" />
                    </StackPanel>

                    <StackPanel Margin="17.5,3.5" Orientation="Horizontal">
                        <TextBlock Text="{Binding Path=FieldName}" />
                        <TextBlock Margin="7,0" Text="= Value" />
                    </StackPanel>

                    <StackPanel Margin="17.5,3.5"
                                Orientation="Horizontal"
                                Visibility="{Binding Path=IncludeOnPropertyChanged,
                                                     Converter={StaticResource booleanToVisibilityConverter}}">
                        <Grid Margin="0,0,7,0">
                            <ComboBox x:Name="cboPropertyChangedMethodNames"
                                      MaxWidth="170"
                                      Focusable="False"
                                      IsSynchronizedWithCurrentItem="True"
                                      Loaded="cboPropertyChangedMethodNames_Loaded" />
                            <TextBox Width="150"
                                     Margin="0,0,17,0"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Top"
                                     Text="{Binding Path=OnPropertyChangedMethodName,
                                                    Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                        <TextBlock Text="(" />
                        <TextBlock Foreground="Maroon" Text="&quot;" />
                        <TextBlock Foreground="Maroon" Text="{Binding Path=PropertyName}" />
                        <TextBlock Foreground="Maroon" Text="&quot;" />
                        <TextBlock Text=")" />
                    </StackPanel>

                    <TextBlock Margin="10.5,3.5"
                               Foreground="Blue"
                               Text="End Set" />

                    <TextBlock Margin="3.5"
                               Foreground="Blue"
                               Text="End Property" />

                    <GroupBox Margin="7">
                        <GroupBox.Header>
                            <TextBlock FontWeight="Bold" Text="Options" />
                        </GroupBox.Header>
                        <StackPanel>
                            <CheckBox Margin="3.5"
                                      Content="Is Property Public"
                                      IsChecked="{Binding Path=IsPropertyPublic,
                                                          Mode=TwoWay,
                                                          UpdateSourceTrigger=PropertyChanged}" />
                            <CheckBox Margin="3.5"
                                      Content="Is Property ReadOnly"
                                      IsChecked="{Binding Path=IsPropertyReadOnly,
                                                          Mode=TwoWay,
                                                          UpdateSourceTrigger=PropertyChanged}" />
                            <CheckBox Margin="3.5"
                                      Content="Is Setter Private"
                                      IsChecked="{Binding Path=HasPrivateSetter,
                                                          Mode=TwoWay,
                                                          UpdateSourceTrigger=PropertyChanged}" />
                            <CheckBox Margin="3.5"
                                      Content="Include Property Changed Notification"
                                      IsChecked="{Binding Path=IncludeOnPropertyChanged,
                                                          Mode=TwoWay,
                                                          UpdateSourceTrigger=PropertyChanged}" />
                            <CheckBox Margin="3.5"
                                      Content="Implement INotifyPropertyChanged and Provide OnPropertyChanged EventHandler"
                                      IsChecked="{Binding Path=IncludeOnPropertyChangedEventHandler,
                                                          Mode=TwoWay,
                                                          UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                    </GroupBox>

                </StackPanel>
            </TabItem>
            <TabItem Header="Step 2 (optional)">
                <StackPanel>
                    <TextBlock Margin="7"
                               Text="Selecting one or more fields will expose them individually on the ViewModel."
                               TextWrapping="Wrap" />
                    <TextBlock Margin="7"
                               Text="Note: The below ListBox uses Extended selection mode making it very easy to multi-select. (CTRL + click and SHIFT + click)"
                               TextWrapping="Wrap" />
                    <StackPanel Margin="7" Orientation="Horizontal">
                        <TextBlock FontSize="14" Text="Data Class" />
                        <TextBlock Margin="7,0,0,0"
                                   FontSize="14"
                                   FontWeight="Bold"
                                   Text="{Binding Path=TypeName}" />
                    </StackPanel>
                    <clstb:CheckListBox Width="Auto"
                                        Height="275"
                                        Margin="7"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Background="#FFFFFFFF"
                                        BorderBrush="#FF000000"
                                        BorderThickness="1"
                                        CheckBrushStrokeThickness="1"
                                        ClipToBounds="True"
                                        FontSize="12"
                                        Padding="5">
                        <ListBox x:Name="lbProperteis"
                                 Width="Auto"
                                 Height="Auto"
                                 AlternationCount="2"
                                 FontSize="12"
                                 ItemsSource="{Binding Source={StaticResource cvsProperties}}"
                                 SelectionMode="Extended">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                                    <Style.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="WhiteSmoke" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Margin="3.5,2" Text="{Binding Path=FullName}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </clstb:CheckListBox>

                    <GroupBox Margin="7" Visibility="{Binding Path=IsVB, Converter={StaticResource booleanToVisibilityConverter}}">
                        <GroupBox.Header>
                            <TextBlock FontWeight="Bold" Text="Options" />
                        </GroupBox.Header>
                        <StackPanel>
                            <CheckBox Margin="3.5"
                                      Content="Use Hungarian Notation for Private Backing Fields"
                                      IsChecked="{Binding Path=UseHungarianNotationForPrivateFields,
                                                          Mode=TwoWay,
                                                          UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>
        </TabControl>

        <GroupBox Height="150" Margin="7">
            <GroupBox.Header>
                <TextBlock FontWeight="Bold" Text="Commands" />
            </GroupBox.Header>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Button HorizontalAlignment="Right"
                        Click="btnAddCommand_Click"
                        Content="Add Command" />
                <ListBox Grid.Row="1"
                         AlternationCount="1"
                         Background="White"
                         ItemContainerStyle="{StaticResource alternatingWithTriggers}"
                         ItemsSource="{Binding Path=CommandsCollection}" />
            </Grid>
        </GroupBox>

        <StackPanel Margin="7"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
            <Button Command="{Binding Path=CreateCommand}"
                    Content="Create"
                    Padding="3.5" />
            <Button Margin="7,0"
                    Click="btnCancel_Click"
                    Content="Cancel"
                    Padding="3.5" />
        </StackPanel>
    </StackPanel>
</Window>
